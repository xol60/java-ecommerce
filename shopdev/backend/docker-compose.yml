version: '3.8'

services:
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: ecommerce
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  auth-service:
    image: auth-service
    container_name: auth-service
    build:
      context: ./auth-service
    ports:
      - "8081:8081"
    depends_on:
      - mysql
      - redis
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: docker

  product-service:
    image: product-service
    container_name: product-service
    build:
      context: ./product-service
    ports:
      - "8085:8085"
    depends_on:
      - mysql
      - redis
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: docker

  inventory-service:
    image: inventory-service
    container_name: inventory-service
    build:
      context: ./inventory-service
    ports:
      - "8084:8084"
    depends_on:
      - redis
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: docker

  order-service:
    image: order-service
    container_name: order-service
    build:
      context: ./order-service
    ports:
      - "8083:8083"
    depends_on:
      - redis
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: docker

volumes:
  mysql_data: