server:
  port: 8082

spring:
  application:
    name: user-service

  datasource:
    url: jdbc:mysql://mysql:3306/ecommerce
    username: root
    password: root123
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update       # Automatically update table structure
    show-sql: true           # Print SQL queries to console
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer


  data:
    redis:
      host: redis         # Redis container hostname (must match docker-compose)
      port: 6379          # Redis default port
